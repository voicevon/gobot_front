{"_default": {"1": {"mac_addr": "184_214_26_31_207_204", "lua_script": "print(\"\")\nprint(\"\")\nprint(\"\")\nprint('********************************************')\nprint('Warning from Lua IDE')\nprint('There is no lua script for this node')\nprint(\"\")\nprint(\"my mac_addr is:\")\nmac = r.MacAddr()\nmac_str = ''\nfor i=1,6 do\n   x=string.byte(mac,i,i)\n   if i== 1 then\n       mac_str = mac_str .. tostring(x)\n    else\n       mac_str = mac_str .. '_' .. tostring(x)\n    end\nend\n\nprint(mac_str )\nprint(\"\")\nprint('********************************************')\nprint(\"\")\nprint(\"\")\nprint(\"\")\n"}, "3": {"mac_addr": "tooth_picker", "lua_script": "last_timer = 0\nstate = \"not_homed\"\ndo_pickup_count = 0\n\nfunction do_mqtt_message()\n    msg_payload = app.ReadMqttMessage()\n    if msg_payload == 'pickup' then \n        pick_up()\n    end\n    if msg_payload == 'placedown' then\n        place_down()\n    end\nend\n\nfunction onGcodeFinished()\n\n    if state == \"parking\" then\n        robot.AppendGcode(\"G1X10Y10\")\n        state = \"parked\"\n    elseif state == \"going_down_b\" then\n        robot.AppendGcode(\"G1X10Y10\")\n        state = \"parking_failed\"\n    elseif state == \"going_up_a\" then\n        robot.AppendGcode(\"G1X10Y20\")\n        state = \"aligning\"\n    elseif state == \"aligning\" then\n        -- robot.AppendGcode(\"G1X10Y10\")\n        last_timer = now\n        state = \"delaying\"\n    elseif state == \"parked\" then\n    else\n        print(\"unknown state\", state)\n    end\n\nend\n\n--  *******************************************************************\nfunction onTimer(now)\n    if state == \"parked\" then\n        if do_pickup_count >0 then\n            do_pickup_count = do_pickup_count -1\n            robot.AppendGcode(\"G1X30Y30\")\n            board.SetInnerVacuum(1)\n            state= \"going_down_b\"          \n        end\n    elseif state == \"not_homed\" then\n        if robot.IsHomed() then\n            robot.AppendGcode(\"G1X10Y10\")\n            state = \"parking\"\n        end\n    elseif state == \"going_down_b\" then\n        air_p = board.ReadAirPressure()\n        if air_p < 1.234 then\n            print(\"------------------------------------------------   low air pressure detected, suck tooth ok.\")\n            robot.AppendGcode(\"G1X10Y20\")\n            state = \"going_up_a\"\n        end\n    elseif state == \"delaying\" then\n        if now - last_timer > 600 then\n            print(\"------------------------------------------------  released tooth, drop it down\")\n            board.SetInnerVacuum(0)\n            robot.AppendGcode(\"G1X10Y10\")\n            state = \"parking\"\n        else\n            print(\"delaying...\")\n        end\n    elseif state == \"parked\" then\n    elseif state == \"parked_failed\" then\n    elseif state == \"parking\" then\n    elseif state == \"going_up_a\" then\n    else \n        print(\"on Timer unknown state================\",state)\n    end\nend\n\nfunction loop()\n    for i=1, 99999999, 1 do\n        now = r.Millis()\n        \n        local event = r.WaitEvent();\n        -- print(\"event=\", event)\n        if (event == 0) then\n            onTimer(now)\n        elseif (event & 1) == 1 then\n            print(\"event_bit = 0\")\n            -- do_mqtt_message()\n        elseif (event & 2) == 2 then\n            -- EVENT_BIT_HAS_NO_MOVEMENT_ACTUATORS\n            onGcodeFinished()\n        else\n            print (\"unknown event\", event)\n        end\n    end\nend\n\n\nfunction setup()\n    print('-------------------------------------------------------------')\n    robot.AppendGcode(\"G28X\")\n    robot.AppendGcode(\"G28Y\")  \nend\n\nsetup()\ndo_pickup_count = 19\nloop()\nrobot.AppendGcode(\"G1X10Y20\")\nprint('*******************************************************************')\n\n"}, "4": {"mac_addr": "default_for_blank_mcu", "lua_script": "print(\"\")\nprint(\"\")\nprint('********************************************')\nprint(\"template name:    default_for_blank_mcu\")\nprint('********************************************')\nprint('Warning from Lua IDE')\nprint('There is no lua script for this node')\nprint(\"\")\nprint(\"my mac_addr is:\")\nmac = r.MacAddr()\nmac_str = ''\nfor i=1,6 do\n   x=string.byte(mac,i,i)\n   if i== 1 then\n       mac_str = mac_str .. tostring(x)\n    else\n       mac_str = mac_str .. '_' .. tostring(x)\n    end\nend\n\nprint(mac_str )\nprint(\"\")\nprint('********************************************')\nprint(\"\")\nprint(\"\")\nprint(\"\")\n"}, "5": {"mac_addr": "onboard_weighing_node", "lua_script": "\nfunction onTimer(now)\n    if now - started_at > 2000 then\n        -- local distance = app.ReadDistance()\n        local distance = 1111\n        app.Write(my_node_id, distance)\n        started_at = now\n        print(\"onTimer() start_at\", started_at)\n    end\nend\n\nfunction onReceive(now)\n    local node_id, distance = app.Read()\n    print(\"on Received()   node_id, my_following_node_id, distance\", node_id, my_following_node_id, distance)\n    if node_id == my_following_node_id then\n        -- distance = app.ReadDistance()\n        ri.Delay(400)\n        distance = 5555\n        app.Write(my_node_id, distance)\n        started_at = now\n        print(\"onReceive() start_at\", started_at)\n    end\nend\n\nfunction setup()\n    my_node_id = 4\n    my_following_node_id = my_node_id - 1\n    if my_following_node_id == 0 then\n        my_following_node_id = 4\n    end\n\n    started_at = 0\nend\n\n\nfunction loop()\n    while (true) do\n        local event = ri.WaitEvent()\n        local now = ri.Millis()\n        if (event == 0) then\n            onTimer(now)\n        elseif (event & 1) == 1 then\n            onReceive(now)\n        end\n    end\nend\n\nprint('---------------------------OnBoard Weighing, running  ----------------------------------')\nsetup()\nloop()\n\n"}, "6": {"mac_addr": "onboard_weighing_head", "lua_script": "\n\n\nfunction onTimer(now)\n    if (now - started_at > 800) then\n        started_at = r.Millis()\n        print(\"........................node time out\", last_node_id)\n    end\nend\n\nfunction onReceive(now)\n    local node_id, distance = app.Read()\n    -- print(\"node_id, last_node_id, distance\", node_id, last_node_id, distance)\n    app.SetLed(node_id -1, 1)   -- turn on\n    app.SetLed(last_node_id-1, 0)  -- turn off\n    last_node_id = node_id\n    started_at = now\n    if (distance==1111) then\n        print(\"timeout_node_id, distance\", node_id, distance)\n    else\n        print(\"-------------normal_node_id, distance\", node_id, distance)\n    end\nend\n\nfunction setup()\n    started_at = 0\n    app.SetLed(0, 1)\n    last_node_id = 0\nend\n\n\nfunction loop()\n    while true do\n        local event = r.WaitEvent()\n        local now = r.Millis()\n        if (event == 0) then\n            onTimer(now)\n        elseif (event & 1) == 1 then\n            onReceive(now)\n        end\n    end\nend\n\nprint('---------------------------OnBoard Weighing head, running ----------------------------------')\n\nsetup()\nloop()"}, "7": {"mac_addr": "water_dropper", "lua_script": "\nstate = 1\nstarted_at  = 0\ndelay_ms = wd.ReadSettingTimer()\nangle_ratio = 3.5\n\nfunction onTimer(now)\n    if state == 2 then\n        print(\"timer\", now - started_at)\n        if now - started_at > delay_ms then\n            print(\"leaving state 2\")\n            wd.SetSpeed(0)\n            state = 1\n        end\n    end\nend\n\nfunction onButton(button_value)\n    if state == 1 then\n        if button_value then\n            print(\"button\", button_value)\n            started_at = r.Millis()\n            wd.SetSpeed(255)\n            state = 2\n        end\n    end\nend\n\nfunction onAngle(angle)\n    if state == 1 then\n        print(\"state 1 >> angle\", angle)\n        if angle > 10 then\n            state = 3\n        end\n    end\n\n    if state == 3 then\n        print(\"state 3 >> angle\", angle)\n        if angle < 5 then\n            wd.SetSpeed(0)\n            state = 1\n        else\n            -- wd.SetSpeed(255)\n            speed = 0.8 * angle\n            if (speed > 255) then\n                speed = 255\n            end\n            wd.SetSpeed(speed)\n        end\n    end\nend\n\n\nfunction loop()\n    print('---------------------------Water dropper, running loop ----------------------------------')\n    while true do\n        now = r.Millis()\n        event = r.WaitEvent();\n        onTimer(now)\n        if (event & 1) == 1 then\n            onButton(wd.ReadButton())\n        end\n        if (event & 2) == 2 then\n            onAngle(wd.ReadAngle() * angle_ratio)\n        end\n    end\nend\n\nloop()"}, "8": {"mac_addr": "uart_net", "lua_script": "\nc =0\n\nfunction onTimer()\n\tprint(\"onTimer\")\n\tnet.UartSendMaster(\"master from timer\")\n\tnet.UartSendSlave(\"slave from timer\")\nend\n\nfunction onMqttRx()\n    -- print(\"onMqtt\")\n\tpp = net.MqttReadPayload(0)\n\t-- c=c+1 \theap = r.ReadFreeHeap()\n\t-- print(c, heap)\n\t-- net.MqttPublish('esp32/heap', tostring(heap))\n    net.UartSendMaster(\"master  master  master  master  master  master  master \")\n    net.UartSendSlave(\"  slave  slave   slave     slave    slave    slave    slave \")\n\nend\n\nfunction onMasterRx()\n\n\trx = net.UartReadMaster();\n\tprint(\"master_rx\", rx)\nend\n\nfunction onSlaveRx()\n\trx = net.UartReadSlave();\n\tprint(\"-------------------------slave_rx\", rx)\nend\n\t\n\n\nfunction main()\n\tprint('................................')\n\tlast_event = 0\n\tfor i=50, 100000000000 ,1 do\n\t\tc= c + 1\n\t\tevent = r.WaitEvent(255)\n\t\tif event == 0 then\n\t\t\tonTimer()\n\t\tend\n\t\tif (event & 63) > 0  then\n\t\t\tonMqttRx()\n\t\tend\n\t\tif (event & 64) == 64 then\n\t\t\tonMasterRx()\n\t\tend\n\t\tif (event & 128) == 128 then\n\t\t\tonSlaveRx()\n\t\tend\n\tend\nend\n\nmain()"}, "9": {"mac_addr": "188_221_194_240_55_181", "lua_script": "print(\"\")\nprint(\"\")\nprint(\"\")\nprint(\"\")\nprint(\"hello iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\")\nprint(\"\")\nprint(\"\")\nprint(\"\")\nprint(\"\")"}, "10": {"mac_addr": "188_221_194_240_57_117", "lua_script": "function test_http_print()\n    for i=1, 9999,1 do\n        print(i)\n        ri.Delay(1000)\n    end\nend\n\nri.SetPrint(2)\nprint(ri.Help())\n\ntest_http_print()", "action": "save_and_run", "net_config": {"wifi_ssid": "Perfect", "wifi_password": "1234567890", "mqtt_broker": "voicevon.vicp.io", "mqtt_port": "1883", "mqtt_uid": "von", "mqtt_password": "http://voicevon.vicp.io:5000/down/mcu", "mqtt_main_lua_url": "http://voicevon.vicp.io:5000/down/mcu"}}, "12": {"mac_addr": "test WaitEvent", "lua_script": "\nstate = 1\nstarted_at  = 0\n\nangle_ratio = 3.5\n\nfunction onTimer(now)\n    print(now)\n    if state == 2 then\n        print(\"timer\", now - started_at)\n\n    end\nend\n\n\n\nfunction loop()\n    print('---------------------------Water dropper, running loop ----------------------------------')\n    while true do\n        now = r.Millis()\n        event = r.WaitEvent();\n        onTimer(now)\n\n    end\nend\n\nloop()"}, "13": {"mac_addr": "test list libs", "lua_script": "\n\nfunction list_libs()\n    local exclude = { _G = true, _VERSION = true, arg = true }\n    for name, value in pairs(_G) do\n        if not exclude[name] then\n            if type(value) == 'table' then\n                print(name)\n            end\n            if name == 'ri' or name == 'app' then\n                for name, value in pairs(value) do\n                    print('\\t', name)\n                end\n            end\n        end\n    end\nend\n\n\n\n\nlist_libs()\n--print(ri.Help())\n--print(app.Help())"}, "14": {"mac_addr": "test Lua IDE", "lua_script": "function test_http_print()\n    for i=1, 9999,1 do\n        print(i)\n        ri.Delay(1000)\n    end\nend\n\nri.SetPrint(2)\nprint(ri.Help())\n\ntest_http_print()", "action": "reset"}, "15": {"mac_addr": "1_2_3_4_5_6", "lua_script": "print(\"Hello lua ide \")", "action": "save_and_run", "net_config": {"wifi_ssid": "Perfect", "wifi_password": "1234567890", "mqtt_broker": "voicevon.vicp.io", "mqtt_port": "1883", "mqtt_uid": "von", "mqtt_password": "http://voicevon.vicp.io:5000/down/mcu", "mqtt_main_lua_url": "http://voicevon.vicp.io:5000/down/mcu"}}}}